service: CyberneticTask

provider:
  name: aws
  runtime: nodejs20.x
  profile: task
  region: us-west-2
  environment:
    DYNAMODB_TABLE: !Ref UsersTable
    SNS_TOPIC_ARN:  !Ref UserValidationTopic 

functions:
  validateUser:
    handler: handler.validateUser
    events:
      - http:
          path: validate-user
          method: post
    iamRoleStatementsName: validateuser-lambda-role
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - 'sns:Publish'
        Resource:
          - !Ref UserValidationTopic
      - Effect: Allow
        Action:
          - 'dynamodb:GetItem'
          - 'dynamodb:PutItem'
          - 'dynamodb:Query'
          - "dynamodb:BatchGetItem"
          - "dynamodb:Scan"
          - "dynamodb:BatchWriteItem"
          - "dynamodb:UpdateItem"
        Resource:
          - Fn::GetAtt: [UsersTable, Arn] 
  2faAuth:
    handler: handler.processUserValidation
    events:
      - sns:
          arn: !Ref UserValidationTopic 
          topicName: UserValidationTopic
    iamRoleStatementsName: 2faauth-lambda-role
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - 'lambda:invokeFunction'  
        Resource: "*"
      - Effect: Allow
        Action:
          - "ses:SendEmail"
        Resource: "*"
      - Effect: Allow
        Action:
          - 'dynamodb:GetItem'
          - 'dynamodb:PutItem'
          - 'dynamodb:Query'
          - "dynamodb:BatchGetItem"
          - "dynamodb:Scan"
          - "dynamodb:BatchWriteItem"
          - "dynamodb:UpdateItem"
        Resource:
          - Fn::GetAtt: [UsersTable, Arn] 

resources:
  Resources:
    UserValidationTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: UserValidationTopic 
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        AttributeDefinitions:
          - AttributeName: useremail
            AttributeType: S
        KeySchema:
          - AttributeName: useremail
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


custom:
  sesVerifyEmail:
    commands:
      verifyEmailIdentity:
        command: aws ses verify-email-identity --email-address adilm717@gmail.com

plugins:
  - serverless-iam-roles-per-function
  - serverless-plugin-scripts